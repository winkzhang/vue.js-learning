组件 可以扩展HTML元素，封装可重用的HTML代码，我们可以将组件看做自定义的HTML元素。
 
组件 的创建和注册
    三个步骤：创建组件构造器、注册组件和使用组件
    
    调用Vue.extend()方法创建组件构造器
    调用Vue.component()方法注册组件
    在Vue实例的作用范围内使用组件
    
    html:
    <div id="app">
        <my-component></my-component>
    </div>
    
    js:
    // 创建一个组件构造器
    var myComponent = Vue.extend({
        template: '<div>This is my first component!</div>'
    })
    // 注册组件，并指定组件的标签，组件的HTML标签为<my-component>
    Vue.component('my-component', myComponent)
    // 组件应挂载到某个Vue实例下
    new Vue({
        el:'#app'
    });
 
全局注册 和局部注册
全局 ：可以在任意Vue实例下使用
局部 注册：
    html:
    <div id="app">
        // my-component只能在#app下使用
        <my-component></my-component>
    </div>
    
    js:
    // 创建一个组件构造器
    var myComponent = Vue.extend({
        template: '<div>This is my first component!</div>'
    })
    new Vue({
        el:'#app',
        components: {
            // 将myComponent组件注册到Vue实例下
            'my-component': myComponent
        }
    });
 
父组件 和子组件
    html:
    <div id="app">
        <parent-component>
        </parent-component>
    </div>
    
    js:
    var Child = Vue.extend({
        template: '<p>This is a child component!</p>'
    })
    var Parent = Vue.extend({
        //在Parent组件内使用<child-component>标签
        template: '<p>This is a Parent component</p><child-component></child-component>',
        components: {
            //局部注册Child组件，该组件只能在Parent组件内使用
            'child-component': Child
        }
    }）
    //全局注册Parent组件
    Vue.component('parent-component', Parent)
    new Vue({
        el:'#app'
    })
    Child组件是在Parent组件中注册的，它只能在Parent组件中使用。
    子组件只能在父组件的template中使用。
